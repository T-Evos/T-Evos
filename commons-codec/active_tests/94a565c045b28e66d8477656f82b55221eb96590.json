{
    "org.apache.commons.codec.CharEncodingTest": [
        "testUtf8",
        "testIso8859_1",
        "testUsAscii",
        "testUtf16",
        "testUtf16Be",
        "testUtf16Le",
        "testConstructor"
    ],
    "org.apache.commons.codec.DecoderExceptionTest": [
        "testConstructor0",
        "testConstructorString",
        "testConstructorStringThrowable",
        "testConstructorThrowable"
    ],
    "org.apache.commons.codec.EncoderExceptionTest": [
        "testConstructor0",
        "testConstructorString",
        "testConstructorStringThrowable",
        "testConstructorThrowable"
    ],
    "org.apache.commons.codec.StringEncoderComparatorTest": [
        "testComparatorNoArgCon",
        "testComparatorWithSoundex",
        "testComparatorWithDoubleMetaphone",
        "testComparatorWithDoubleMetaphoneAndInvalidInput"
    ],
    "org.apache.commons.codec.binary.Base32InputStreamTest": [
        "testCodec105",
        "testBase32EmptyInputStreamMimeChuckSize",
        "testBase32EmptyInputStreamPemChuckSize",
        "testBase32InputStreamByChunk",
        "testBase32InputStreamByteByByte",
        "testMarkSupported",
        "testRead0",
        "testReadNull",
        "testReadOutOfBounds"
    ],
    "org.apache.commons.codec.binary.Base32OutputStreamTest": [
        "testBase32OutputStreamByChunk",
        "testBase32OutputStreamByteByByte",
        "testWriteToNullCoverage",
        "testWriteOutOfBounds",
        "testBase32EmptyOutputStreamMimeChunkSize",
        "testBase32EmptyOutputStreamPemChunkSize"
    ],
    "org.apache.commons.codec.binary.Base32Test": [
        "testBase32Samples",
        "testBase32HexSamples",
        "testBase32Chunked",
        "testSingleCharEncoding",
        "testRandomBytes",
        "testRandomBytesChunked",
        "testRandomBytesHex"
    ],
    "org.apache.commons.codec.binary.Base64Codec13Test": [
        "testEncoder",
        "testDecoder",
        "testBinaryEncoder",
        "testBinaryDecoder",
        "testStaticEncode",
        "testStaticDecode",
        "testStaticEncodeChunked",
        "testStaticDecodeChunked"
    ],
    "org.apache.commons.codec.binary.Base64InputStreamTest": [
        "testCodec105",
        "testMarkSupported",
        "testRead0",
        "testReadNull",
        "testReadOutOfBounds",
        "testCodec101",
        "testInputStreamReader",
        "testCodec98NPE",
        "testBase64EmptyInputStreamMimeChuckSize",
        "testBase64EmptyInputStreamPemChuckSize",
        "testBase64InputStreamByChunk",
        "testBase64InputStreamByteByByte"
    ],
    "org.apache.commons.codec.binary.Base64OutputStreamTest": [
        "testBase64EmptyOutputStreamMimeChunkSize",
        "testBase64EmptyOutputStreamPemChunkSize",
        "testBase64OutputStreamByChunk",
        "testBase64OutputStreamByteByByte",
        "testWriteToNullCoverage",
        "testWriteOutOfBounds",
        "testCodec98NPE"
    ],
    "org.apache.commons.codec.binary.Base64Test": [
        "testConstructors",
        "testConstructor_Int_ByteArray_Boolean",
        "testConstructor_Int_ByteArray_Boolean_UrlSafe",
        "testDecodePadMarkerIndex2",
        "testDecodePadMarkerIndex3",
        "testDecodePadOnly",
        "testDecodePadOnlyChunked",
        "testDecodeWithWhitespace",
        "testEmptyBase64",
        "testEncodeDecodeSmall",
        "testEncodeOverMaxSize",
        "testCodec112",
        "testIgnoringNonBase64InDecode",
        "testIsArrayByteBase64",
        "testIsUrlSafe",
        "testKnownDecodings",
        "testKnownEncodings",
        "testNonBase64Test",
        "testObjectDecodeWithInvalidParameter",
        "testObjectDecodeWithValidParameter",
        "testObjectEncodeWithInvalidParameter",
        "testObjectEncodeWithValidParameter",
        "testObjectEncode",
        "testPairs",
        "testRfc2045Section2Dot1CrLfDefinition",
        "testRfc2045Section6Dot8ChunkSizeDefinition",
        "testRfc1421Section6Dot8ChunkSizeDefinition",
        "testRfc4648Section10Decode",
        "testRfc4648Section10DecodeWithCrLf",
        "testRfc4648Section10Encode",
        "testRfc4648Section10DecodeEncode",
        "testRfc4648Section10EncodeDecode",
        "testSingletons",
        "testSingletonsChunked",
        "testTriplets",
        "testTripletsChunked",
        "testUrlSafe",
        "testUUID",
        "testByteToStringVariations",
        "testStringToByteVariations",
        "testIsStringBase64",
        "testBase64",
        "testChunkedEncodeMultipleOf76",
        "testCodec68",
        "testCodeInteger1",
        "testCodeInteger2",
        "testCodeInteger3",
        "testCodeInteger4",
        "testCodeIntegerEdgeCases",
        "testCodeIntegerNull",
        "testEncodeDecodeRandom"
    ],
    "org.apache.commons.codec.binary.BaseNCodecTest": [
        "testIsWhiteSpace",
        "testIsInAlphabetByte",
        "testIsInAlphabetByteArrayBoolean",
        "testIsInAlphabetString",
        "testContainsAlphabetOrPad",
        "testBaseNCodec"
    ],
    "org.apache.commons.codec.binary.BinaryCodecTest": [
        "testDecodeObjectException",
        "testDecodeObject",
        "testDecodeByteArray",
        "testToByteArrayFromString",
        "testFromAsciiCharArray",
        "testFromAsciiByteArray",
        "testEncodeByteArray",
        "testToAsciiBytes",
        "testToAsciiChars",
        "testToAsciiString",
        "testEncodeObjectNull",
        "testEncodeObjectException",
        "testEncodeObject"
    ],
    "org.apache.commons.codec.binary.HexTest": [
        "testEncodeEmpty",
        "testCustomCharset",
        "testCustomCharsetBadNameEncodeByteArray",
        "testCustomCharsetBadNameEncodeObject",
        "testCustomCharsetBadNameDecodeObject",
        "testCustomCharsetToString",
        "testDecodeArrayOddCharacters",
        "testDecodeBadCharacterPos0",
        "testDecodeBadCharacterPos1",
        "testDecodeClassCastException",
        "testDecodeHexOddCharacters1",
        "testDecodeHexOddCharacters3",
        "testDecodeHexOddCharacters5",
        "testDecodeStringOddCharacters",
        "testDencodeEmpty",
        "testEncodeClassCastException",
        "testEncodeDecodeRandom",
        "testEncodeZeroes",
        "testHelloWorldLowerCaseHex",
        "testHelloWorldUpperCaseHex",
        "testRequiredCharset"
    ],
    "org.apache.commons.codec.binary.StringUtilsTest": [
        "testGetBytesIso8859_1",
        "testGetBytesUsAscii",
        "testGetBytesUtf16",
        "testGetBytesUtf16Be",
        "testGetBytesUtf16Le",
        "testGetBytesUtf8",
        "testGetBytesUncheckedBadName",
        "testNewStringBadEnc",
        "testNewStringIso8859_1",
        "testNewStringUsAscii",
        "testNewStringUtf16",
        "testNewStringUtf16Be",
        "testNewStringUtf16Le",
        "testNewStringUtf8",
        "testConstructor"
    ],
    "org.apache.commons.codec.digest.DigestUtilsTest": [
        "testConstructable",
        "testInternalNoSuchAlgorithmException",
        "testMd5Hex",
        "testMD5HexLength",
        "testMD5Length",
        "testSha256",
        "testSha384",
        "testSha512",
        "testShaHex"
    ],
    "org.apache.commons.codec.language.Caverphone1Test": [
        "testCaverphoneRevisitedCommonCodeAT1111",
        "testSpecificationV1Examples",
        "testWikipediaExamples",
        "testEndMb",
        "testIsCaverphoneEquals",
        "testEncodeNull",
        "testEncodeEmpty",
        "testEncodeWithInvalidObject",
        "testLocaleIndependence"
    ],
    "org.apache.commons.codec.language.Caverphone2Test": [
        "testCaverphoneRevisitedExamples",
        "testEndMb",
        "testCaverphoneRevisitedCommonCodeAT11111111",
        "testCaverphoneRevisitedRandomNameKLN1111111",
        "testCaverphoneRevisitedRandomNameTN11111111",
        "testCaverphoneRevisitedRandomNameTTA1111111",
        "testCaverphoneRevisitedRandomWords",
        "testIsCaverphoneEquals",
        "testSpecificationExamples",
        "testEncodeNull",
        "testEncodeEmpty",
        "testEncodeWithInvalidObject",
        "testLocaleIndependence"
    ],
    "org.apache.commons.codec.language.CaverphoneTest": [
        "testCaverphoneRevisitedExamples",
        "testEndMb",
        "testCaverphoneRevisitedCommonCodeAT11111111",
        "testCaverphoneRevisitedRandomNameKLN1111111",
        "testCaverphoneRevisitedRandomNameTN11111111",
        "testCaverphoneRevisitedRandomNameTTA1111111",
        "testCaverphoneRevisitedRandomWords",
        "testIsCaverphoneEquals",
        "testSpecificationExamples",
        "testEncodeNull",
        "testEncodeEmpty",
        "testEncodeWithInvalidObject",
        "testLocaleIndependence"
    ],
    "org.apache.commons.codec.language.ColognePhoneticTest": [
        "testAabjoe",
        "testAaclan",
        "testEdgeCases",
        "testExamples",
        "testHyphen",
        "testIsEncodeEquals",
        "testVariationsMella",
        "testVariationsMeyer",
        "testEncodeNull",
        "testEncodeEmpty",
        "testEncodeWithInvalidObject",
        "testLocaleIndependence"
    ],
    "org.apache.commons.codec.language.DoubleMetaphone2Test": [
        "testDoubleMetaphoneAlternate",
        "testDoubleMetaphonePrimary",
        "testEncodeNull",
        "testEncodeEmpty",
        "testEncodeWithInvalidObject",
        "testLocaleIndependence"
    ],
    "org.apache.commons.codec.language.DoubleMetaphoneTest": [
        "testDoubleMetaphone",
        "testEmpty",
        "testSetMaxCodeLength",
        "testIsDoubleMetaphoneEqualBasic",
        "testIsDoubleMetaphoneEqualExtended1",
        "testIsDoubleMetaphoneEqualExtended2",
        "testIsDoubleMetaphoneEqualExtended3",
        "testIsDoubleMetaphoneEqualWithMATCHES",
        "testIsDoubleMetaphoneNotEqual",
        "testCCedilla",
        "testNTilde",
        "testEncodeNull",
        "testEncodeEmpty",
        "testEncodeWithInvalidObject",
        "testLocaleIndependence"
    ],
    "org.apache.commons.codec.language.MetaphoneTest": [
        "testIsMetaphoneEqual1",
        "testIsMetaphoneEqual2",
        "testIsMetaphoneEqualAero",
        "testIsMetaphoneEqualWhite",
        "testIsMetaphoneEqualAlbert",
        "testIsMetaphoneEqualGary",
        "testIsMetaphoneEqualJohn",
        "testIsMetaphoneEqualKnight",
        "testIsMetaphoneEqualMary",
        "testIsMetaphoneEqualParis",
        "testIsMetaphoneEqualPeter",
        "testIsMetaphoneEqualRay",
        "testIsMetaphoneEqualSusan",
        "testIsMetaphoneEqualWright",
        "testIsMetaphoneEqualXalan",
        "testMetaphone",
        "testWordEndingInMB",
        "testDiscardOfSCEOrSCIOrSCY",
        "testWhy",
        "testWordsWithCIA",
        "testTranslateOfSCHAndCH",
        "testTranslateToJOfDGEOrDGIOrDGY",
        "testDiscardOfSilentHAfterG",
        "testDiscardOfSilentGN",
        "testPHTOF",
        "testSHAndSIOAndSIAToX",
        "testTIOAndTIAToX",
        "testTCH",
        "testExceedLength",
        "testSetMaxLengthWithTruncation",
        "testEncodeNull",
        "testEncodeEmpty",
        "testEncodeWithInvalidObject",
        "testLocaleIndependence"
    ],
    "org.apache.commons.codec.language.RefinedSoundexTest": [
        "testEncode",
        "testGetMappingCodeNonLetter",
        "testDifference",
        "testNewInstance",
        "testNewInstance2",
        "testNewInstance3",
        "testEncodeNull",
        "testEncodeEmpty",
        "testEncodeWithInvalidObject",
        "testLocaleIndependence"
    ],
    "org.apache.commons.codec.language.SoundexTest": [
        "testB650",
        "testBadCharacters",
        "testDifference",
        "testEncodeBasic",
        "testEncodeBatch2",
        "testEncodeBatch3",
        "testEncodeBatch4",
        "testEncodeIgnoreApostrophes",
        "testEncodeIgnoreHyphens",
        "testEncodeIgnoreTrimmable",
        "testHWRuleEx1",
        "testHWRuleEx2",
        "testHWRuleEx3",
        "testMaxLength",
        "testMaxLengthLessThan3Fix",
        "testMsSqlServer1",
        "testMsSqlServer2",
        "testMsSqlServer3",
        "testNewInstance",
        "testNewInstance2",
        "testNewInstance3",
        "testSoundexUtilsConstructable",
        "testSoundexUtilsNullBehaviour",
        "testUsEnglishStatic",
        "testUsMappingEWithAcute",
        "testUsMappingOWithDiaeresis",
        "testEncodeNull",
        "testEncodeEmpty",
        "testEncodeWithInvalidObject",
        "testLocaleIndependence"
    ],
    "org.apache.commons.codec.net.BCodecTest": [
        "testUTF8RoundTrip",
        "testBasicEncodeDecode",
        "testEncodeDecodeNull",
        "testEncodeStringWithNull",
        "testDecodeStringWithNull",
        "testEncodeObjects",
        "testInvalidEncoding",
        "testDecodeObjects",
        "testNullInput"
    ],
    "org.apache.commons.codec.net.QCodecTest": [
        "testUTF8RoundTrip",
        "testBasicEncodeDecode",
        "testEncodeDecodeNull",
        "testEncodeStringWithNull",
        "testDecodeStringWithNull",
        "testEncodeObjects",
        "testInvalidEncoding",
        "testDecodeObjects",
        "testUnsafeEncodeDecode",
        "testEncodeDecodeBlanks",
        "testLetUsMakeCloverHappy",
        "testNullInput"
    ],
    "org.apache.commons.codec.net.QuotedPrintableCodecTest": [
        "testUTF8RoundTrip",
        "testBasicEncodeDecode",
        "testEncodeDecodeNull",
        "testEncodeStringWithNull",
        "testDecodeStringWithNull",
        "testEncodeObjects",
        "testInvalidEncoding",
        "testDecodeObjects",
        "testSafeCharEncodeDecode",
        "testUnsafeEncodeDecode",
        "testEncodeNull",
        "testEncodeUrlWithNullBitSet",
        "testDecodeWithNullArray",
        "testDefaultEncoding",
        "testSoftLineBreakDecode",
        "testSoftLineBreakEncode",
        "testDecodeInvalid"
    ],
    "org.apache.commons.codec.net.RFC1522CodecTest": [
        "testNullInput",
        "testDecodeInvalid"
    ],
    "org.apache.commons.codec.net.URLCodecTest": [
        "testUTF8RoundTrip",
        "testBasicEncodeDecode",
        "testEncodeDecodeNull",
        "testEncodeStringWithNull",
        "testDecodeStringWithNull",
        "testEncodeObjects",
        "testInvalidEncoding",
        "testDecodeObjects",
        "testSafeCharEncodeDecode",
        "testUnsafeEncodeDecode",
        "testEncodeNull",
        "testEncodeUrlWithNullBitSet",
        "testDecodeWithNullArray",
        "testDefaultEncoding",
        "testDecodeInvalid",
        "testDecodeInvalidContent"
    ],
    "org.apache.commons.codec.net.UtilsTest": [
        "testConstructor"
    ]
}