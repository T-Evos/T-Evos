{
    "org.jsoup.helper.DataUtilTest": [
        "firstMetaElementWithCharsetShouldBeUsedForDecoding",
        "secondMetaElementWithContentTypeContainsCharsetParameter",
        "supportsUTF8BOM",
        "generatesMimeBoundaries",
        "discardsSpuriousByteOrderMarkWhenNoCharsetSet",
        "discardsSpuriousByteOrderMark",
        "shouldCorrectCharsetForDuplicateCharsetString",
        "shouldNotThrowExceptionOnEmptyCharset",
        "testCharset",
        "supportsBOMinFiles",
        "testQuotedCharset",
        "wrongMetaCharsetFallback",
        "shouldSelectFirstCharsetOnWeirdMultileCharsetsInMetaTags",
        "shouldReturnNullForIllegalCharsetNames"
    ],
    "org.jsoup.helper.HttpConnectionTest": [
        "throwsExceptionOnParseWithoutExecute",
        "connectWithUrl",
        "ignoresEmptySetCookies",
        "throwsOnMalformedUrl",
        "multipleHeaders",
        "cookie",
        "timeout",
        "method",
        "referrer",
        "sameHeadersCombineWithComma",
        "inputStream",
        "throwsExceptionOnBodyAsBytesWithoutExecute",
        "data",
        "userAgent",
        "throwsExceptionOnBodyWithoutExecute",
        "headers",
        "requestBody",
        "ignoresEmptyCookieNameAndVals",
        "encodeUrl",
        "throwsOnOddData",
        "caseInsensitiveHeaders"
    ],
    "org.jsoup.helper.StringUtilTest": [
        "isWhitespace",
        "padding",
        "join",
        "paddingInACan",
        "normaliseWhiteSpaceHandlesHighSurrogates",
        "isNumeric",
        "resolvesRelativeUrls",
        "normaliseWhiteSpace",
        "isBlank"
    ],
    "org.jsoup.helper.W3CDomTest": [
        "simpleConversion",
        "namespacePreservation",
        "convertsGoogleLocation",
        "handlesInvalidAttributeNames",
        "convertsGoogle"
    ],
    "org.jsoup.integration.ConnectTest": [
        "multipleParsesOkAfterBufferUp",
        "multiCookieSet",
        "canInterruptBodyStringRead",
        "bodyAndBytesAvailableBeforeParse",
        "parseParseThrowsValidates",
        "totalTimeout",
        "fetchURIWithWihtespace",
        "handlesEmptyStreamDuringParseRead",
        "infiniteReadSupported",
        "sendsRequestBodyWithUrlParams",
        "fetchURl",
        "sendsRequestBody",
        "bodyAfterParseThrowsValidationError",
        "doesPost",
        "supportsDeflate",
        "canInterruptDocumentRead",
        "sendsRequestBodyJsonWithoutData",
        "sendsRequestBodyJsonWithData",
        "canConnectToLocalServer",
        "doesGet",
        "doesPut",
        "exceptOnUnsupportedProtocol",
        "postFiles",
        "handlesEmtpyStreamDuringBufferdRead",
        "slowReadOk"
    ],
    "org.jsoup.integration.ParseTest": [
        "testYahooJp",
        "testBaiduVariant",
        "testGoogleSearchIpod",
        "testBaidu",
        "testSmhBizArticle",
        "testYahooArticle",
        "testBrokenHtml5CharsetWithASingleDoubleQuote",
        "testNytArticle",
        "testLowercaseUtf8Charset",
        "testBinary",
        "testNewsHomepage",
        "testHtml5Charset"
    ],
    "org.jsoup.integration.UrlConnectTest": [
        "org.jsoup.integration.UrlConnectTest"
    ],
    "org.jsoup.internal.ConstrainableInputStreamTest": [
        "org.jsoup.internal.ConstrainableInputStreamTest"
    ],
    "org.jsoup.nodes.AttributeTest": [
        "testWithSupplementaryCharacterInAttributeKeyAndValue",
        "html"
    ],
    "org.jsoup.nodes.AttributesTest": [
        "testIteratorRemovable",
        "testIteratorHasNext",
        "removeCaseSensitive",
        "html",
        "testSetKeyConsistency",
        "testIteratorEmpty",
        "testIterator",
        "testIteratorUpdateable"
    ],
    "org.jsoup.nodes.DocumentTest": [
        "testOutputEncoding",
        "testMetaCharsetUpdateDisabledNoChanges",
        "testOverflowClone",
        "testHtmlAppendable",
        "testLocation",
        "testClonesDeclarations",
        "testClone",
        "testShiftJisRoundtrip",
        "testNormalisesStructure",
        "testXhtmlReferences",
        "testMetaCharsetUpdateXmlNoCharset",
        "testMetaCharsetUpdateUtf8",
        "testMetaCharsetUpdateEnabledAfterCharsetChange",
        "testMetaCharsetUpdateDisabled",
        "testMetaCharsetUpdateXmlDisabled",
        "testMetaCharsetUpdateCleanup",
        "DocumentsWithSameContentAreEqual",
        "testMetaCharsetUpdatedDisabledPerDefault",
        "testMetaCharsetUpdateXmlIso8859",
        "parseAndHtmlOnDifferentThreads",
        "testMetaCharsetUpdateNoCharset",
        "DocumentsWithSameContentAreVerifialbe",
        "setTextPreservesDocumentStructure",
        "htmlParseDefaultsToHtmlOutputSyntax",
        "testMetaCharsetUpdateIso8859",
        "testMetaCharsetUpdateXmlUtf8",
        "testHtmlAndXmlSyntax",
        "testTitles",
        "testMetaCharsetUpdateXmlDisabledNoChanges"
    ],
    "org.jsoup.nodes.DocumentTypeTest": [
        "outerHtmlGeneration",
        "constructorValidationOkWithBlankName",
        "constructorValidationOkWithBlankPublicAndSystemIds",
        "testRoundTrip",
        "constructorValidationThrowsExceptionOnNulls"
    ],
    "org.jsoup.nodes.ElementTest": [
        "testFormatOutline",
        "parentlessToString",
        "insertChildrenArgumentValidation",
        "testPrependElement",
        "testOuterHtml",
        "testHashcodeIsStableWithContentChanges",
        "elementByTagName",
        "testClonesClassnames",
        "appendMustCorrectlyMoveChildrenInsideOneParentElement",
        "before",
        "testRemoveBeforeIndex",
        "testChainedRemoveAttributes",
        "booleanAttributeOutput",
        "testAddNewHtml",
        "testAddNewText",
        "testGetElementById",
        "testClone",
        "testHtmlContainsOuter",
        "testClassDomMethods",
        "testWrap",
        "testNamespacedElements",
        "testClassNames",
        "testElementSiblingIndex",
        "testIs",
        "testEmptyElementFormatHtml",
        "testLoopedRemoveAttributes",
        "testShadowElementsAreUpdated",
        "testKeepsPreTextAtDepth",
        "testGetElementsWithAttribute",
        "testNoIndentOnScriptAndStyle",
        "testAppendRowToTable",
        "testGetElementsWithClass",
        "testShallowClone",
        "testWrapWithRemainder",
        "testKeepsPreTextInCode",
        "testHasClassDomMethods",
        "testGetParents",
        "testGetText",
        "getElementsByTagName",
        "testFormatHtml",
        "testGetElementsWithAttributeValue",
        "testWholeText",
        "testGetElementsWithAttributeDash",
        "testManipulateTextNodes",
        "testChildThrowsIndexOutOfBoundsOnMissing",
        "testPrependRowToTable",
        "testGetTextNodes",
        "after",
        "testContainerOutput",
        "testInnerHtml",
        "testHasText",
        "testGetDataNodes",
        "testCssPath",
        "testSetHtmlTitle",
        "testChildrenElements",
        "moveByAppend",
        "testNormalisesText",
        "testClassUpdates",
        "testAddNewElement",
        "testHashAndEqualsAndValue",
        "testElementSiblingIndexSameContent",
        "testGetChildText",
        "testRelativeUrls",
        "testSetIndent",
        "testThrowsOnAddNullText",
        "testGetSiblingsWithDuplicateContent",
        "testNormalizesInvisiblesInText",
        "insertChildrenAsCopy",
        "testTagNameSet",
        "dataset",
        "testPrependText",
        "testNormalizesNbspInText",
        "testRemoveAfterIndex",
        "testThrowsOnPrependNullText",
        "testGetSiblings",
        "testSetHtml",
        "testSetText",
        "testAddBooleanAttribute",
        "textHasSpaceAfterBlockTags",
        "whiteSpaceClassElement",
        "classNamesAndAttributeNameIsCaseInsensitive",
        "testPrependNewHtml",
        "testRemovingEmptyClassAttributeWhenLastClassRemoved",
        "testBrHasSpace",
        "testKeepsPreText",
        "testNotPretty",
        "testNextElementSiblingAfterClone",
        "testAppendTo",
        "getNamespacedElementsByTag",
        "insertChildrenAtPosition",
        "elementIsNotASiblingOfItself"
    ],
    "org.jsoup.nodes.EntitiesTest": [
        "strictUnescape",
        "escapeSupplementaryCharacter",
        "escapesGtInXmlAttributesButNotInHtml",
        "escape",
        "unescape",
        "caseSensitive",
        "noSpuriousDecodes",
        "notMissingMultis",
        "xhtml",
        "getByName",
        "notMissingSupplementals",
        "escapedSupplemtary",
        "quoteReplacements",
        "letterDigitEntities",
        "unescapeMultiChars"
    ],
    "org.jsoup.nodes.FormElementTest": [
        "createsFormData",
        "actionWithNoValue",
        "removeFormElement",
        "formsAddedAfterParseAreFormElements",
        "createsSubmitableConnection",
        "controlsAddedAfterParseAreLinkedWithForms",
        "adoptedFormsRetainInputs",
        "usesOnForCheckboxValueIfNoValueSet",
        "hasAssociatedControls",
        "actionWithNoBaseUri"
    ],
    "org.jsoup.nodes.NodeTest": [
        "handlesAbsOnProtocolessAbsoluteUris",
        "setBaseUriIsRecursive",
        "ownerDocument",
        "before",
        "handleAbsOnLocalhostFileUris",
        "unwrap",
        "absHandlesDotFromIndex",
        "supportsClone",
        "root",
        "after",
        "absHandlesRelativeQuery",
        "unwrapNoChildren",
        "literalAbsPrefix",
        "handlesBaseUri",
        "handlesAbsOnImage",
        "nodeIsNotASiblingOfItself",
        "handleAbsOnFileUris",
        "testReplace",
        "handlesAbsPrefixOnHasAttr",
        "childNodesCopy",
        "changingAttributeValueShouldReplaceExistingAttributeCaseInsensitive",
        "traverse",
        "orphanNodeReturnsNullForSiblingElements",
        "handlesAbsPrefix",
        "testRemove"
    ],
    "org.jsoup.nodes.TextNodeTest": [
        "testWithSupplementaryCharacter",
        "testLeadNodesHaveNoChildren",
        "testBlank",
        "testTextBean",
        "testSplitText",
        "testSplitAnEmbolden"
    ],
    "org.jsoup.parser.AttributeParseTest": [
        "dropsSlashFromAttributeName",
        "moreAttributeUnescapes",
        "parsesBooleanAttributes",
        "handlesNewLinesAndReturns",
        "canStartWithEq",
        "parsesRoughAttributeString",
        "strictAttributeUnescapes",
        "parsesEmptyString"
    ],
    "org.jsoup.parser.CharacterReaderTest": [
        "nextIndexOfUnmatched",
        "unconsume",
        "nextIndexOfChar",
        "notEmptyAtBufferSplitPoint",
        "rangeEquals",
        "consumeToChar",
        "advance",
        "consumeToString",
        "consumeToAny",
        "consumeToEnd",
        "consumeToNonexistentEndWhenAtAnd",
        "containsIgnoreCase",
        "mark",
        "empty",
        "cachesStrings",
        "consumeLetterThenDigitSequence",
        "consumeLetterSequence",
        "nextIndexOfString",
        "matches",
        "consume",
        "matchesIgnoreCase",
        "matchesAny"
    ],
    "org.jsoup.parser.HtmlParserTest": [
        "normalisesHeadlessBody",
        "parsesUnterminatedOption",
        "handlesProtocolRelativeUrl",
        "dropsUnterminatedTag",
        "canPreserveAttributeCase",
        "handlesNullInComments",
        "handlesTextAfterData",
        "dropsUnterminatedAttribute",
        "testNormalisesIsIndex",
        "noTableDirectInTable",
        "testSupportsPartiallyNonAsciiTags",
        "testSpaceAfterTag",
        "handlesXmlDeclarationAsBogusComment",
        "normalisesDocument",
        "createsStructureFromBodySnippet",
        "canPreserveTagCase",
        "preservesSpaceInScript",
        "handlesXmlDeclAndCommentsBeforeDoctype",
        "testHtmlLowerCase",
        "handlesDeepStack",
        "parsesSimpleDocument",
        "doesNotCreateImplicitLists",
        "parsesUnterminatedTextarea",
        "testSupportsNonAsciiTags",
        "handlesWhatWgExpensesTableExample",
        "handlesImplicitCaptionClose",
        "handlesQuotesInCommentsInScripts",
        "handlesInputInTable",
        "handlesInvalidStartTags",
        "handlesEscapedData",
        "reconstructFormattingElements",
        "createsDocumentStructure",
        "handlesCdataInScript",
        "handlesUnclosedTitle",
        "caseInsensitiveParseTree",
        "handleNullContextInParseFragment",
        "parsesUnterminatedComments",
        "emptyTdTag",
        "caseSensitiveParseTree",
        "testFragment",
        "handlesUnclosedScriptAtEof",
        "handlesNewlinesAndWhitespaceInTag",
        "handlesDataOnlyTags",
        "handlesMisnestedAInDivs",
        "normalizesDiscordantTags",
        "handlesCdataAcrossBuffer",
        "noImplicitFormForTextAreas",
        "commentBeforeHtml",
        "handlesUnclosedCdataAtEOF",
        "handlesCdata",
        "handlesKnownEmptyBlocks",
        "createsFormElements",
        "noErrorsByDefault",
        "testHeaderContents",
        "testRelaxedTags",
        "handlesKnownEmptyStyle",
        "handlesKnownEmptyTitle",
        "preservesSpaceInTextArea",
        "handlesUnexpectedMarkupInTables",
        "handlesKnownEmptyIframe",
        "testTemplateInsideTable",
        "cdataNodesAreTextNodes",
        "ignoresContentAfterFrameset",
        "handlesBaseTags",
        "testSpanContents",
        "handles0CharacterAsText",
        "handlesFrames",
        "handlesJavadocFont",
        "testReinsertionModeForThCelss",
        "handlesControlCodeInAttributeName",
        "handlesInvalidDoctypes",
        "handlesTagsInTextarea",
        "handlesCommentsInTable",
        "handlesEscapedScript",
        "testInvalidTableContents",
        "handlesUnknownTags",
        "ignoresDupeEndTrTag",
        "associatedFormControlsWithDisjointForms",
        "handlesTbodyTable",
        "normalisedBodyAfterContent",
        "handlesSpanInTbody",
        "handlesUnclosedTitleAtEof",
        "handlesSolidusAtAttributeEnd",
        "handlesUnknownNamespaceTags",
        "handlesKnownEmptyNoFrames",
        "roundTripsCdata",
        "handlesManyChildren",
        "handlesTextArea",
        "convertsImageToImg",
        "preSkipsFirstNewline",
        "commentAtEnd",
        "selfClosingOnNonvoidIsError",
        "handlesNestedImplicitTable",
        "parsesRoughAttributes",
        "testUsingSingleQuotesInQueries",
        "handlesUnclosedDefinitionLists",
        "handlesWhitespaceInoDocType",
        "reconstructFormattingElementsInTable",
        "selfClosingVoidIsNotAnError",
        "testNoImagesInNoScriptInHead",
        "handlesBaseWithoutHref",
        "handlesUnclosedRawtextAtEof",
        "tracksLimitedErrorsWhenRequested",
        "doesNotFindShortestMatchingEntity",
        "tracksErrorsWhenRequested",
        "handlesUnclosedAnchors",
        "parsesBodyFragment",
        "handlesUnknownInlineTags",
        "testSelectWithOption",
        "normalisesEmptyDocument",
        "relaxedBaseEntityMatchAndStrictExtendedMatch",
        "handlesUnclosedFormattingElements",
        "handlesSolidusInA",
        "testHgroup",
        "discardsNakedTds",
        "parsesComments",
        "testFontFlowContents",
        "handlesMisnestedTagsBI",
        "handlesMisnestedTagsBP",
        "canPreserveBothCase",
        "testHandlesDeepSpans",
        "handleCDataInText",
        "findsCharsetInMalformedMeta",
        "handlesMultiClosingBody",
        "handlesBlocksInDefinitions",
        "testAFlowContents",
        "handlesNullInData",
        "parsesQuiteRoughAttributes"
    ],
    "org.jsoup.parser.HtmlTreeBuilderStateTest": [
        "ensureArraysAreSorted"
    ],
    "org.jsoup.parser.HtmlTreeBuilderTest": [
        "ensureSearchArraysAreSorted"
    ],
    "org.jsoup.parser.ParserSettingsTest": [
        "attributesCaseNormalization",
        "caseSupport",
        "attributeCaseNormalization"
    ],
    "org.jsoup.parser.TagTest": [
        "divSemantics",
        "trims",
        "imgSemantics",
        "valueOfChecksNotEmpty",
        "pSemantics",
        "equality",
        "defaultSemantics",
        "canBeInsensitive",
        "valueOfChecksNotNull",
        "isCaseSensitive"
    ],
    "org.jsoup.parser.TokenQueueTest": [
        "addFirst",
        "unescape",
        "chompToIgnoreCase",
        "chompEscapedBalanced",
        "consumeToIgnoreSecondCallTest",
        "chompBalanced",
        "testNestedQuotes",
        "chompBalancedMatchesAsMuchAsPossible"
    ],
    "org.jsoup.parser.TokeniserStateTest": [
        "testEndTagOpen",
        "testPublicIdentifiersWithWhitespace",
        "testRCDATAEndTagName",
        "testCharacterReferenceInRcdata",
        "testRcdataLessthanSign",
        "ensureSearchArraysAreSorted",
        "testCommentEndCoverage",
        "testBeforeTagName",
        "testPublicAndSystemIdentifiersWithWhitespace",
        "testSystemIdentifiersWithWhitespace",
        "testCommentEndBangCoverage"
    ],
    "org.jsoup.parser.TokeniserTest": [
        "handleLargeComment",
        "handleLargeCdata",
        "handleLargeTitle",
        "bufferUpInAttributeVal",
        "cp1252EntitiesProduceError",
        "handleSuperLargeTagNames",
        "handleSuperLargeAttributeName",
        "cp1252SubstitutionTable",
        "cp1252Entities",
        "handleLargeText"
    ],
    "org.jsoup.parser.XmlTreeBuilderTest": [
        "testPopToClose",
        "handlesXmlDeclarationAsDeclaration",
        "caseSensitiveDeclaration",
        "testSupplyParserToJsoupClass",
        "normalizesDiscordantTags",
        "testSupplyParserToConnection",
        "testDoesNotForceSelfClosingKnownTags",
        "testCommentAndDocType",
        "testSimpleXmlParse",
        "xmlFragment",
        "testDetectCharsetEncodingDeclaration",
        "roundTripsCdata",
        "canNormalizeCase",
        "cdataPreservesWhiteSpace",
        "preservesCaseByDefault",
        "testParseDeclarationAttributes",
        "testSupplyParserToDataStream",
        "xmlParseDefaultsToHtmlOutputSyntax",
        "testCreatesValidProlog",
        "testDoesHandleEOFInTag"
    ],
    "org.jsoup.safety.CleanerTest": [
        "testHandlesEmptyAttributes",
        "basicBehaviourTest",
        "handlesCustomProtocols",
        "testIsValidBodyHtml",
        "preservesRelativeLinksIfConfigured",
        "testCleanAnchorProtocol",
        "bailsIfRemovingProtocolThatsNotSet",
        "testDropScript",
        "testRemoveTags",
        "testRemoveAttributes",
        "testRemoveEnforcedAttributes",
        "testRelaxed",
        "resolvesRelativeLinks",
        "testDropComments",
        "handlesFramesets",
        "handlesControlCharactersAfterTagName",
        "simpleBehaviourTest2",
        "testRemoveProtocols",
        "testDropImageScript",
        "simpleBehaviourTest",
        "handlesAttributesWithNoValue",
        "dropsUnresolvableRelativeLinks",
        "testScriptTagInWhiteList",
        "addsTagOnAttributesIfNotSet",
        "testDropsUnknownTags",
        "testCleanJavascriptHref",
        "basicWithImagesTest",
        "whitelistedProtocolShouldBeRetained",
        "testDropXmlProc",
        "testIsValidDocument",
        "handlesAllPseudoTag",
        "supplyOutputSettings",
        "cleansInternationalText"
    ],
    "org.jsoup.select.CssTest": [
        "nthLastOfType_advanced",
        "nthChild_advanced",
        "nthOfType_advanced",
        "nthOfType_simple",
        "firstOfType",
        "firstChild",
        "nthLastOfType_simple",
        "root",
        "onlyOfType",
        "nthLastChild_simple",
        "empty",
        "onlyChild",
        "nthChild_simple",
        "nthLastChild_advanced",
        "lastOfType",
        "lastChild",
        "nthOfType_unknownTag"
    ],
    "org.jsoup.select.ElementsTest": [
        "classWithHyphen",
        "before",
        "filter",
        "eachAttr",
        "eachText",
        "absAttr",
        "remove",
        "unwrap",
        "parents",
        "unwrapP",
        "unwrapKeepsSpace",
        "eq",
        "is",
        "not",
        "val",
        "attr",
        "html",
        "text",
        "wrap",
        "hasClassCaseInsensitive",
        "after",
        "empty",
        "forms",
        "siblings",
        "attributes",
        "hasAttr",
        "hasText",
        "hasAbsAttr",
        "classes",
        "traverse",
        "wrapDiv",
        "outerHtml",
        "tagNameSet",
        "setHtml"
    ],
    "org.jsoup.select.QueryParserTest": [
        "testParsesSingleQuoteInContains",
        "testOrGetsCorrectPrecedence",
        "testParsesMultiCorrectly",
        "exceptionOnUncloseAttribute"
    ],
    "org.jsoup.select.SelectorTest": [
        "containsData",
        "testByAttributeStarting",
        "deeperDescendant",
        "selectSameElements",
        "testPseudoEquals",
        "testByClassCaseInsensitive",
        "testByAttributeRegexCharacterClass",
        "testAllWithClass",
        "testByTag",
        "testById",
        "findBetweenSpan",
        "descendant",
        "handlesCommasInSelector",
        "notAll",
        "testByAttribute",
        "selectClassWithSpace",
        "notAdjacent",
        "testCombinedWithContains",
        "containsWithQuote",
        "testPseudoGreaterThan",
        "testAllElements",
        "testByAttributeRegex",
        "mixCombinator",
        "testRelaxedTags",
        "testPseudoBetween",
        "testPseudoLessThan",
        "testGroupOr",
        "testByClass",
        "and",
        "attributeWithBrackets",
        "testPsuedoContainsWithParentheses",
        "testGroupOrAttribute",
        "caseInsensitive",
        "selectFirst",
        "containsOwn",
        "testCharactersInIdAndClass",
        "splitOnBr",
        "multiChildDescent",
        "adjacentSiblingsWithId",
        "testMatches",
        "matchText",
        "selectFirstWithOr",
        "matchTextAttributes",
        "parentWithClassChild",
        "generalSiblings",
        "parentChildStar",
        "testPseudoCombined",
        "testPseudoContains",
        "testPseudoHas",
        "notClass",
        "notParas",
        "selectSupplementaryCharacter",
        "adjacentSiblings",
        "testNamespacedTag",
        "testNestedHas",
        "parentChildElement",
        "testByAttributeRegexCombined",
        "matchesOwn",
        "testSupportsLeadingCombinator",
        "mixCombinatorGroup",
        "testWildcardNamespacedTag",
        "selectFirstWithAnd"
    ],
    "org.jsoup.select.TraversorTest": [
        "filterStop",
        "filterVisit",
        "filterSkipChildren",
        "filterSkipEntirely",
        "filterRemove"
    ]
}